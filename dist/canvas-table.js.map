{"version":3,"sources":["node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","node_modules/@babel/runtime/regenerator/index.js","node_modules/@babel/runtime/helpers/defineProperty.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","canvas-table.js"],"names":["$","fn","canvasTable","_options","options","startX","startY","activeMode","extend","width","height","templateAreas","images","gap","fillStyle","strokeStyle","strokeDash","strokeWidth","showAlignmentLines","onSelected","areas","$canvas","ctx","getContext","MODE","editingIndex","previewData","parseInt","canvasWidth","canvasHeight","canvas","clear","initArea","_image","matchedRows","matchedColumns","area","name","rowsLength","length","heightUnit","columnsLength","split","widthUnit","rowIndex","matchedArea","columns","find","column","columnIndex","includes","push","xPos","yPos","image","Image","crossOrigin","src","source","Promise","resolve","reject","onerror","onload","xDistance","yDistance","xTranslate","yTranslate","scale","rotate","drawArea","clearRect","fillRect","i","cx","cy","save","beginPath","toAreaId","rect","translate","Math","PI","clip","drawImage","restore","lineWidth","setLineDash","moveTo","lineTo","stroke","isRectangle","globalAlpha","getAreaIndexByPosition","e","findIndex","offsetX","offsetY","moveImage","editingArea","overOtherImageIndex","fromAreaId","fromArea","changePreview","css","selectMode","handleMouseDown","preventDefault","clickedAreaIndex","handleMouseUp","toArea","changeImage","handleMouseMove","mousedown","mousemove","mouseup","touchEvent","r","getBoundingClientRect","touch","originalEvent","touches","changedTouches","clientX","left","clientY","top","on","all","map","areasMapping","init","changeScale","val","Number","changeRotate","createPhoto","type","toDataURL","setDefault","jQuery"],"mappings":"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","file":"canvas-table.js","sourceRoot":"..","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","\"use strict\";\n\n(function ($) {\n  $.fn.canvasTable = function (_options) {\n    const options = $.extend(\n      {\n        width: 500,\n        height: 500,\n        templateAreas: [],\n        images: [],\n        gap: 1,\n        fillStyle: \"#fff\",\n        strokeStyle: \"red\",\n        strokeDash: 0,\n        strokeWidth: 3,\n        showAlignmentLines: true,\n        onSelected: () => null\n      },\n      _options\n    );\n\n    let areas = [];\n\n    const $canvas = this;\n    const ctx = $canvas[0].getContext(\"2d\");\n\n    const MODE = {\n      TRANSLATE: \"translate\",\n      CHANGE: \"change\",\n      CHANGE_PREVIEW: \"change_preview\",\n      SELECTION: \"selection\"\n    };\n\n    let startX;\n    let startY;\n    let activeMode;\n    let editingIndex = -1;\n    let previewData = {};\n\n    const gap = parseInt(options.gap, 10)\n    const canvasWidth = parseInt(options.width, 10) - gap\n    const canvasHeight = parseInt(options.height, 10) - gap\n\n    ctx.canvas.width = canvasWidth + gap;\n    ctx.canvas.height = canvasHeight + gap;\n\n    const clear = () => {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.fillStyle = options.fillStyle;\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    };\n\n    const initArea = async (_image) => {\n      const matchedRows = [];\n      const matchedColumns = [];\n      let area = {\n        name: _image.area\n      };\n\n      const rowsLength = options.templateAreas.length;\n      const heightUnit = ((canvasHeight) / rowsLength);\n\n      const columnsLength = options.templateAreas[0].split(\" \").length;\n      const widthUnit = ((canvasWidth) / columnsLength);\n\n      for (let rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n        const columns = options.templateAreas[rowIndex].split(\" \");\n        const matchedArea = columns.find((column) => column === _image.area);\n        if (!matchedArea) continue;\n\n        if (!matchedRows.includes(rowIndex)) matchedRows.push(rowIndex);\n\n        for (let columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n          if (\n            columns[columnIndex] === _image.area &&\n            !matchedColumns.includes(columnIndex)\n          ) {\n            matchedColumns.push(columnIndex);\n          }\n        }\n      }\n\n      area.xPos = (matchedColumns[0] * widthUnit) + gap\n      area.yPos = (matchedRows[0] * heightUnit) + gap\n\n      area.width = (matchedColumns.length * widthUnit) - gap\n      area.height = (matchedRows.length * heightUnit) - gap\n\n      const image = new Image();\n      image.crossOrigin = \"anonymous\";\n      image.src = _image.source;\n\n      return new Promise((resolve, reject) => {\n        image.onerror = reject;\n\n        image.onload = () => {\n          image.width = area.width > image.width ? area.width : image.width;\n          image.height =\n            area.height > image.height ? area.height : image.height;\n\n          const xDistance = image.width - area.width;\n          const yDistance = image.height - area.height;\n          image.xTranslate = 0;\n          image.yTranslate = 0;\n\n          image.scale = _image.scale || 1;\n          image.rotate = _image.rotate || 0;\n\n          image.xPos = area.xPos - xDistance / 2;\n          image.yPos = area.yPos - yDistance / 2;\n\n          resolve({\n            image,\n            ...area\n          });\n        };\n      });\n    };\n\n    const drawArea = () => {\n      clear();\n\n      for (let i = 0; i < areas.length; i++) {\n        const area = areas[i];\n        const cx = area.xPos + area.image.xTranslate + 0.5 * area.width\n        const cy = area.yPos + area.image.yTranslate + 0.5 * area.height;\n        ctx.save();\n        ctx.beginPath();\n        if (previewData.toAreaId === i) {\n          ctx.rect(area.xPos + 5, area.yPos + 5, area.width - 10, area.height - 10);\n        } else {\n          ctx.rect(area.xPos, area.yPos, area.width, area.height);\n        }\n        ctx.translate(cx, cy);\n        ctx.scale(area.image.scale, area.image.scale);\n        ctx.rotate((Math.PI / 180) * area.image.rotate);\n        ctx.translate(-cx, -cy);\n        ctx.clip();\n        ctx.drawImage(\n          area.image,\n          area.image.xPos + area.image.xTranslate,\n          area.image.yPos + area.image.yTranslate,\n          area.image.width,\n          area.image.height\n        );\n        ctx.restore();\n\n        if (i === editingIndex) {\n          ctx.strokeStyle = options.strokeStyle;\n          ctx.lineWidth = options.strokeWidth;\n          ctx.setLineDash([options.strokeDash, options.strokeDash]);\n          if (options.showAlignmentLines) {\n            ctx.moveTo(area.xPos + area.width, area.yPos + area.height / 2);\n            ctx.lineTo(area.xPos, area.yPos + area.height / 2);\n\n            ctx.moveTo(area.xPos + area.width / 2, area.yPos);\n            ctx.lineTo(area.xPos + area.width / 2, area.height + area.yPos);\n          }\n          ctx.stroke();\n        }\n      }\n\n      if (activeMode === MODE.CHANGE_PREVIEW) {\n        const isRectangle = previewData.image.width > previewData.image.height\n        ctx.globalAlpha = 0.8;\n        ctx.drawImage(\n          previewData.image,\n          previewData.xPos,\n          previewData.yPos,\n          isRectangle ? 200 : 150,\n          isRectangle ? 150 : 200,\n        );\n        ctx.globalAlpha = 1;\n      }\n    };\n\n    const getAreaIndexByPosition = (e) =>\n      areas.findIndex(\n        (area) =>\n          e.offsetX >= area.xPos &&\n          e.offsetX <= area.xPos + area.width &&\n          e.offsetY >= area.yPos &&\n          e.offsetY <= area.yPos + area.height\n      );\n\n    const changeImage = () => {\n      const fromAreaId = previewData.fromAreaId;\n      const toAreaId = previewData.toAreaId;\n      previewData = {}\n\n      activeMode = MODE.SELECTION;\n      editingIndex = toAreaId;\n\n      const fromArea = { ...areas[fromAreaId] };\n      const toArea = { ...areas[toAreaId] };\n\n      fromArea.image.xTranslate = 0;\n      fromArea.image.yTranslate = 0;\n\n      toArea.image.xTranslate = 0;\n      toArea.image.yTranslate = 0;\n\n      fromArea.image.xPos =\n        toArea.xPos - (fromArea.image.width - toArea.width) / 2;\n      fromArea.image.yPos =\n        toArea.yPos - (fromArea.image.height - toArea.height) / 2;\n\n      areas[fromAreaId] = {\n        ...fromArea,\n        image: toArea.image\n      };\n\n\n      toArea.image.xPos =\n        fromArea.xPos - (toArea.image.width - fromArea.width) / 2;\n      toArea.image.yPos =\n        fromArea.yPos - (toArea.image.height - fromArea.height) / 2;\n\n      areas[toAreaId] = {\n        ...toArea,\n        image: fromArea.image\n      };\n\n      drawArea();\n    };\n\n    const changePreview = (fromAreaId, toAreaId, e) => {\n      activeMode = MODE.CHANGE_PREVIEW\n      const fromArea = areas[fromAreaId]\n\n      if (fromArea) {\n        previewData.image = fromArea.image\n        previewData.xPos = e.offsetX;\n        previewData.yPos = e.offsetY;\n        previewData.fromAreaId = fromAreaId;\n        previewData.toAreaId = toAreaId;\n        drawArea();\n      }\n    }\n\n    const moveImage = (e) => {\n      const editingArea = areas[editingIndex];\n      const overOtherImageIndex = getAreaIndexByPosition(e);\n\n      if (overOtherImageIndex > -1 && overOtherImageIndex !== editingIndex) {\n        startX = -e.offsetX;\n        startY = -e.offsetY;\n        changePreview(editingIndex, overOtherImageIndex, e);\n      } else {\n        activeMode = MODE.TRANSLATE\n        previewData = {}\n        $canvas.css(\"cursor\", \"move\");\n        editingArea.image.xTranslate = startX + e.offsetX;\n        editingArea.image.yTranslate = startY + e.offsetY;\n\n        drawArea();\n      }\n    };\n\n    const selectMode = () => {\n      activeMode = MODE.SELECTION;\n      $canvas.css(\"cursor\", \"auto\");\n      drawArea();\n      options.onSelected?.(areas[editingIndex]);\n    };\n\n    const handleMouseDown = (e) => {\n      e.preventDefault();\n      const clickedAreaIndex = getAreaIndexByPosition(e);\n\n      if (activeMode === MODE.TRANSLATE || activeMode === MODE.CHANGE) {\n        selectMode();\n      } else if (clickedAreaIndex > -1) {\n        options.onSelected?.(areas[clickedAreaIndex]);\n        editingIndex = clickedAreaIndex;\n        const editingArea = areas[editingIndex];\n        startX = editingArea.image.xTranslate - e.offsetX;\n        startY = editingArea.image.yTranslate - e.offsetY;\n        activeMode = MODE.TRANSLATE;\n      }\n    };\n\n    const handleMouseUp = (e) => {\n      e.preventDefault();\n      activeMode === MODE.CHANGE_PREVIEW ? changeImage() : selectMode();\n    };\n\n    const handleMouseMove = (e) => {\n      if (editingIndex < 0 || !activeMode) return;\n      e.preventDefault();\n      if (activeMode === MODE.TRANSLATE || activeMode === MODE.CHANGE || activeMode === MODE.CHANGE_PREVIEW)\n        moveImage(e);\n    };\n\n    $canvas.mousedown(handleMouseDown);\n    $canvas.mousemove(handleMouseMove);\n    $canvas.mouseup(handleMouseUp);\n\n    const touchEvent = (e) => {\n      const r = $canvas[0].getBoundingClientRect();\n      const touch =\n        e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\n      e.offsetX = touch.clientX - r.left;\n      e.offsetY = touch.clientY - r.top;\n\n      return e;\n    };\n\n    $canvas.on(\"touchstart\", (e) => handleMouseDown(touchEvent(e)));\n    $canvas.on(\"touchmove\", (e) => handleMouseMove(touchEvent(e)));\n    $canvas.on(\"touchend\", (e) => handleMouseUp(touchEvent(e)));\n\n    const changeScale = (val) => {\n      const editingArea = areas[editingIndex];\n      if (editingArea) {\n        editingArea.image.scale = Number(val);\n        drawArea();\n      }\n      return $canvas;\n    };\n\n    const changeRotate = (val) => {\n      const editingArea = areas[editingIndex];\n      if (editingArea) {\n        editingArea.image.rotate = Number(val);\n        drawArea();\n      }\n      return $canvas;\n    };\n\n    const createPhoto = (type) => $canvas[0].toDataURL(type || \"image/png\");\n\n    const setDefault = () => {\n      editingIndex = -1;\n      activeMode = null;\n      $canvas.css(\"cursor\", \"auto\");\n      startX = 0;\n      startY = 0;\n      previewData = {};\n      drawArea();\n    };\n\n    const init = async () => {\n      const areasMapping = await Promise.all(options.images.map(initArea));\n      areas.push(...areasMapping);\n      drawArea();\n    };\n\n    init();\n\n    return {\n      changeScale,\n      changeRotate,\n      createPhoto,\n      setDefault\n    };\n  };\n})(jQuery);\n"]}